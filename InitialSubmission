#############################################################################################
####Libraries for Analysis
#############################################################################################
setwd("C:/Users/wischj/Documents/R/")
#Functions I use.....
library(plyr)
library(eeptools)
library(lme4)
library(ggpubr)
library(grid)
library(gridExtra)
library(rmcorr)
library(ppcor)
library(stargazer)
library(dplyr)
library(tableone)

source("C:/Users/wischj/Documents/PracticeData/Cathy/CommonFuncs.R")
source("W:/ances/julie/Cathy/LongitudinalFC_Functions.R")

#############################################################################################
#############################################################################################
#############################################################################################

#############################################################################################
#Reading in data and cleaning it
#######TODAY SINCE I DON"T HAVE ACCESS TO MY REAL STUFF
df<-read.csv("C:/Users/wischj/Documents/PracticeData/Cathy/CathysCleanedFCMatrices.csv")
df$Session_Date<-as.Date(df$Session_Date, format = "%m/%d/%Y")
df$BIRTH<-as.Date(df$BIRTH, format = "%m/%d/%Y")
df$Age<-age_calc(df$BIRTH, df$Session_Date, units = "years")

DX<-read.csv("C:/Users/wischj/Documents/PracticeData/Cathy/DX.csv")
DX<-DX[,c("ID", "cdr", "testdate", "dx1", "dx2")]
DX$testdate<-as.Date(DX$testdate, format = "%d-%b-%y")

df$apoe4<-mapvalues(as.factor(df$apoe4), from = c("22", "23", "24", "33", "34", "44"), 
                    to = c("0", "0", "1", "0", "1", "1")) #not tracking 2 vs 1 copy because not enough 2 copies

DX$dx1<-substr(DX$dx1, start = 1, stop = 6)
DX$dx1<-tolower(DX$dx1)
DX$Diagnosis<-ifelse(DX$dx1 == "cognit", "Normal", ifelse(DX$dx1 == "ad dem", "AD", "Other Dementia"))

DX$dx2<-substr(DX$dx2, start = 1, stop = 6)
DX$dx2<-tolower(DX$dx2) #none of these have AD as a secondary diagnosis
DX$Diagnosis<-ifelse(DX$dx2 == "ad dem", "AD",DX$Diagnosis)

ADIDs<-unique(DX[DX$Diagnosis == "AD","ID"])
OtherIDs<-unique(DX[DX$Diagnosis == "Other Dementia","ID"])

Converters<-unique(df[df$cdr05 > 0, "ID"])

Converters_toDrop<-Converters[!(Converters %in% ADIDs)]

df<-df[!(df$ID %in% Converters_toDrop),] #dropping everyone with squishy diagnoses

df$cdr05<-as.factor(df$cdr05)
df$cdr05<-revalue(df$cdr05, c("0" = "Non-Converter", "1" = "Converter"))

#######################################
#Now getting the ids of amyloid positive individuals as signs of AD pathology
#dropping everyone with AD pathology who is a non converter to clean up our groups
df.drop<-read.csv("C:/Users/wischj/Documents/SecretData/Schindler_CSF_2018_10_10.csv")
df.drop<-df.drop[,c("ID", "AMYLOID", "pTau_Ab42_10")]
df.drop<-df.drop[df.drop$AMYLOID == 1 | df.drop$pTau_Ab42_10 == 1,]
NonConverters<-unique(df[df$cdr05 == "Non-Converter","ID"])
df.drop<-NonConverters[NonConverters %in% df.drop$ID] #59 individuals are amyloid positive but not converters
df<-df[!(df$ID %in% df.drop),]#This doesn't give too few participants.  Still have 290 non converters
#########################################

rm(ADIDs, Converters, Converters_toDrop, OtherIDs, DX, df.drop)
#############################################################################################
#Correcting for atrophy per Reviewer 2
df.MRI<-read.csv("C:/Users/wischj/Documents/SecretData/HASD_ACS_DR14_3TMR.csv")
df.MRI$ADsig<-(normalize(df.MRI$MR_LV_INFRTMP)+normalize(df.MRI$MR_RV_MIDTMP)+normalize(df.MRI$MR_LV_SUPERTMP)+
                 normalize(df.MRI$MR_RV_INFRTMP)+normalize(df.MRI$MR_LV_MIDTMP)+normalize(df.MRI$MR_RV_SUPERTMP)+
                 normalize(df.MRI$MR_RV_INFRPRTL)+normalize(df.MRI$MR_RV_SUPERPRTL)+
                 normalize(df.MRI$MR_LV_INFRPRTL)+normalize(df.MRI$MR_LV_SUPERPRTL)+
                 normalize(df.MRI$MR_LV_PRECUNEUS)+normalize(df.MRI$MR_RV_PRECUNEUS))/12

df.MRI$HippoVol<-(normalize(df.MRI$MR_LV_HIPPOCAMPUS)+normalize(df.MRI$MR_RV_HIPPOCAMPUS))/2
df.MRI$MR_Date<-as.Date(df.MRI$MR_Date, format = "%m/%d/%Y")
df.MRI<-MatchbyNearestDate(df[,c(1:9, 101:195)], df.MRI[, c(1:9, 344:345)], "ID", "Session_Date", "MR_Date") 

#Use below if you want to correct for atrophy
# library(lme4)
# for(i in 13:103){
# model<-lmer(df.MRI[,i] ~ HippoVol + (1|ID), data = df.MRI)
# as.data.frame(coef(model)$ID)[1, 2]
# df.MRI[,i]<- df.MRI[,i] -  as.data.frame(coef(model)$ID)[1, 2] * df.MRI$HippoVol }

#############################################################################################
#PCA Analysis to get signature
df_pca<-df
df_pca[,104:194]<-df.MRI[,13:103] #Regression correction
df_pca <- prcomp(df_pca[,c(104, 117, 129, 140, 150, 159, 167, 174, 180, 185, 189, 192, 194)], scale. = TRUE) #pca for just intranetwork, 25% of variance
df$FCSummary<-as.numeric(as.matrix(df[,c(104, 117, 129, 140, 150, 159, 167, 174, 180, 185, 189, 192, 194)])%*%df_pca$rotation[,1] )
df.MRI$FCSummary<-as.numeric(as.matrix(df.MRI[,c(104-91, 117-91, 129-91, 140-91, 150-91, 159-91,
                                                 167-91, 174-91, 180-91, 185-91, 189-91, 192-91, 194-91)])%*%df_pca$rotation[,1] )

loadings <- df_pca$rotation
sdev <- df_pca$sdev
var.coord <- t(apply(loadings, 1, var_coord_func, sdev)) 
var.cos2 <- var.coord^2
comp.cos2 <- apply(var.cos2, 2, sum)
var.contrib <- t(apply(var.cos2,1, contrib, comp.cos2))

rownames(var.contrib)<-c("Somatomotor", "Lateral Somatomotor", "Cingulate Operculum", 
                         "Auditory", "Default Mode", "Memory", "Vision",
                         "Frontal Parietal", "Salience", "Subcortical", "Ventral Attention",
                         "Dorsal Attention", "Cerebellum")
rm(df_pca)
#############################################################################################


#############################################################################################
#Making Figures 1 and 2
#PCA components and change in signature over time
#900x578
MakeBarPlots(subset(var.contrib[,1], var.contrib[,1] > 0), "Intra-network Connection Signature")
rm(loadings, var.contrib, var.coord, var.cos2, comp.cos2, sdev)

#900x578
ggplot(data = df, aes(x = years, y = FCSummary, group = ID, colour = cdr05, shape = cdr05))+ geom_line(alpha = 0.3)+ geom_point(alpha = 0.6)+
  scale_color_manual("", values = c( "#FFB000", "#1437AD"))+ scale_shape_manual("", values = c(1, 17))+
  geom_smooth(aes(group = cdr05), method = "lm")+ylim(c(-6, 6))+
  xlab("Years to Onset")+ylab("Intranetwork rs-fc Signature")
#############################################################################################


#############################################################################################
#Now cleaning other biomarkers
df.pib<-read.csv("C:/Users/wischj/Documents/SecretData/HASD_ACS_DR14_PIB.csv")
#df.pib<-read.csv("Y:/julie/Data/ADRC/Aggregated/HASD_ACS_DR14_PIB.csv", header = TRUE)
df.pib<-df.pib[,c("ID", "PET_Date", "PUP_fSUVR_rsf_TOT_CORTMEAN", "PUP_fSUVR_rsf_R_CTX_LATOCC", "PUP_fSUVR_rsf_R_WM_LATOCC",
                  "PUP_fSUVR_rsf_TOT_WM_PRECUNEUS", "PUP_fSUVR_rsf_R_CTX_SUPERPRTL")] #tracer is pib for all
df.pib<-CleanUpDates(df.pib)
df.pib<-MatchbyNearestDate(df[,c(1:9, 101:103, 195:196)], df.pib, "ID", "Session_Date", "PET_Date")
df.pib$TimeDiff<-difftime( df.pib$PET_Date, df.pib$Session_Date,units = "weeks")/52
df.pib$PETyears<-df.pib$years+df.pib$TimeDiff
#clean up and remove duplicated results
df.pib<-df.pib[!duplicated(df.pib[,c("ID", "PET_Date")]),]


df.tau<-read.csv("C:/Users/wischj/Documents/SecretData/HASD_ACS_DR14_TAU.csv")
#df.tau<-read.csv("Y:/julie/Data/ADRC/Aggregated/HASD_ACS_DR14_TAU.csv", header = TRUE)
df.tau<-df.tau[,c("ID", "PET_Date", "PUP_fSUVR_rsf_TOT_CORTMEAN")]
df.tau<-CleanUpDates(df.tau)
df.tau<-MatchbyNearestDate(df[,c(1:9, 101:103, 195:196)], df.tau, "ID", "Session_Date", "PET_Date")
df.tau$TimeDiff<-difftime( df.tau$PET_Date, df.tau$Session_Date,units = "weeks")/52
df.tau$PETyears<-df.tau$years+df.tau$TimeDiff
df.tau$GENDER<-as.factor(df.tau$GENDER)
#clean up and remove duplicated results
df.tau<-df.tau[!duplicated(df.tau[,c("ID", "PET_Date")]),]
df.tau$ID<-as.factor(df.tau$ID)
df.tau$ID<-droplevels(df.tau$ID)


df.CSF<-read.csv("C:/Users/wischj/Documents/SecretData/Schindler_CSF_2018_10_10.csv")
colnames(df.CSF)[15]<-"LP_date"
df.CSF<-df.CSF[,-c(8:14, 16)]
df.CSF$LP_date<-as.Date(df.CSF$LP_date, format = "%d-%b-%y")
colnames(df.CSF)[1]<-"ID"
df.CSF$ID<-as.factor(df.CSF$ID)
df.CSF.classic<-df.CSF[,c(1:11, 27)]
df.CSF.classic<-df.CSF.classic[complete.cases(df.CSF.classic),]
df.CSF.classic<-  MatchbyNearestDate(df[,c(1:2, 9, 101:103, 195:196)], df.CSF.classic, "ID", "Session_Date", "LP_date")
rm(df.CSF)

Race<-read.csv("W:/ances/julie/Data/ADRC/Aggregated/DR_demographics_20190122.csv")
df<-merge(df, Race[,c("ID", "race2")], by =  "ID", all.x = TRUE, all.y = FALSE)
colnames(df)[length(df)]<-"Race"

df.pib<-merge(df.pib, Race[,c("ID", "race2")], by =  "ID", all.x = TRUE, all.y = FALSE)
colnames(df.pib)[length(df.pib)]<-"Race"

df.tau<-merge(df.tau, Race[,c("ID", "race2")], by =  "ID", all.x = TRUE, all.y = FALSE)
colnames(df.tau)[length(df.tau)]<-"Race"

df.CSF.classic<-merge(df.CSF.classic, Race[,c("ID", "race2")], by =  "ID", all.x = TRUE, all.y = FALSE)
colnames(df.CSF.classic)[length(df.CSF.classic)]<-"Race"
rm(Race)
#############################################################################################



#############################################################################################
#Doing repeated measures correlations between biomarkers and imaging
#Using rm corr because it takes into account multiple measures
#First correcting for demographics
#use bootstrapping to deal with non-parametric nature of data

df.results<-data.frame(r = numeric(), p = numeric())
datareturn<-list()

#PIB PET imaging
DF<-df.pib
ResponseVariable<-df.pib$PUP_fSUVR_rsf_TOT_CORTMEAN
datareturn[[1]]<-MultipleCorrelations(DF = df.pib, ResponseVariable = df.pib$PUP_fSUVR_rsf_TOT_CORTMEAN,
                                  PUP_fSUVR_rsf_TOT_CORTMEAN~GENDER+EDUC+apoe4+Age+(1|ID))
df.results[1,]<-data.frame(datareturn[[1]]$r, datareturn[[1]]$p)
rownames(df.results)[1]<-"PIB-PET"

#Tau PET imaging
#have to do it differently since there are no repeated measures.  Use spearman correlation
df.tau$apoe4<-as.numeric(df.tau$apoe4)
df.tau$GENDER<-as.numeric(df.tau$GENDER)
datareturn[[2]]<-pcor.test(df.tau$FCSummary, df.tau$PUP_fSUVR_rsf_TOT_CORTMEAN, df.tau[,c("Age", "GENDER", "EDUC", "apoe4")], method = "spearman")
df.results[2,]<-data.frame(datareturn[[2]]$estimate, datareturn[[2]]$p.value)
rownames(df.results)[2]<-"TAU-PET"

#MRI Volumetrics- Liang Wang's AD Signature and Hippocampus Volumes
DF<-df.MRI
ResponseVariable<-df.MRI$ADsig
datareturn[[3]]<-MultipleCorrelations(DF = df.MRI, ResponseVariable = df.MRI$ADsig,
                                  ADsig~GENDER+EDUC+apoe4+Age+(1|ID))
df.results[3,]<-data.frame(datareturn[[3]]$r, datareturn[[3]]$p)
rownames(df.results)[3]<-"AD Signature"

ResponseVariable<-df.MRI$HippoVol
datareturn[[4]]<-MultipleCorrelations(DF = df.MRI, ResponseVariable = df.MRI$HippoVol,
                                  formula = HippoVol~GENDER+EDUC+apoe4+Age+(1|ID))
df.results[4,]<-data.frame(datareturn[[4]]$r, datareturn[[4]]$p)
rownames(df.results)[4]<-"Hippocampus"

#CSF - amyloid, tau, and ptau
DF<-df.CSF.classic
ResponseVariable<-df.CSF.classic$E_ab42
datareturn[[5]]<-MultipleCorrelations(DF = df.CSF.classic, ResponseVariable = df.CSF.classic$E_ab42,
                                  E_ab42~GENDER+EDUC+APOE_10+Age+(1|ID))
df.results[5,]<-data.frame(datareturn[[5]]$r, datareturn[[5]]$p)
rownames(df.results)[5]<-"AB42"

ResponseVariable<-df.CSF.classic$E_tau
datareturn[[6]]<-MultipleCorrelations(DF = df.CSF.classic, ResponseVariable = df.CSF.classic$E_tau,
                                  E_tau~GENDER+EDUC+APOE_10+Age+(1|ID))
df.results[6,]<-data.frame(datareturn[[6]]$r, datareturn[[6]]$p)
rownames(df.results)[6]<-"tau"

ResponseVariable<-df.CSF.classic$E_ptau
datareturn[[7]]<-MultipleCorrelations(DF = df.CSF.classic, ResponseVariable = df.CSF.classic$E_ptau,
                                  E_ptau~GENDER+EDUC+APOE_10+Age+(1|ID))
df.results[7,]<-data.frame(datareturn[[7]]$r, datareturn[[7]]$p)
rownames(df.results)[7]<-"ptau"


#############################################################################################



#############################################################################################
#Content for Tables
LikelihoodRatioTests_RandInt(df$FCSummary, df)
#If you correct for neurodegeneration, then cdr05, years, and cdr05:years are significant
Model<-lmer(FCSummary ~ cdr05 + years + apoe4 + cdr05:years +  GENDER + EDUC + apoe4:years + (1 | ID), data = df)



stargazer(Model, title = "Linear Mixed Effect Model Regression Results", 
          align= TRUE, type = "html", out = "W:/ances/julie/Cathy/Tables.htm",
          covariate.labels=c("Non-Converter", "Years to Onset", "APOE4+", "Sex", "Education", "Non-Converter:Years to Onset",
                             "Years to Onset: APOE4+", "Intercept"),omit.stat=c("LL","ser"),
          ci = TRUE, ci.level = 0.95)

df.unique<-df[!duplicated(df[,c('ID')]),]
listVars<-c("years", "Age", "EDUC", "GENDER", "apoe4", "Race")
catVars<-c("GENDER", "apoe4", "Race")
table1 <- CreateTableOne(vars = listVars, data = df.unique, factorVars = catVars, strata = c("cdr05"))
table1

df.unique<-df.pib[!duplicated(df.pib[,c('ID')]),]
table2 <- CreateTableOne(vars = listVars, data = df.unique, factorVars = catVars, strata = c("cdr05"))
table2

df.unique<-df.tau[!duplicated(df.tau[,c('ID')]),]
table3 <- CreateTableOne(vars = listVars, data = df.unique, factorVars = catVars, strata = c("cdr05"))
table3

df.unique<-df.CSF.classic[!duplicated(df.CSF.classic[,c('ID')]),]
listVars<-c("years", "Age", "EDUC", "GENDER", "APOE_10", "Race")
catVars<-c("GENDER", "APOE_10", "Race")
table4 <- CreateTableOne(vars = listVars, data = df.unique, factorVars = catVars, strata = c("cdr05"))
table4
#############################################################################################



#############################################################################################
#Making biomarker figures
df.pib.plot<-plotSetUp(df.pib, datareturn[[1]]$model$model$Participant, datareturn[[1]]$model$model$Measure1, datareturn[[1]]$model$model$Measure2)
p.pib<-ATNplot(df.pib.plot, df.pib.plot$FCSummary, df.pib.plot$PUP_fSUVR_rsf_TOT_CORTMEAN, datareturn[[1]]$r, datareturn[[1]]$p, "PET - PIB [SUVR]")

p.PETtau<-ggplot(df.tau, aes(x=FCSummary, y=PUP_fSUVR_rsf_TOT_CORTMEAN, colour = cdr05, shape = cdr05)) + geom_point()  + 
  scale_color_manual("Will Convert", values = c( "#FFB000", "#1437AD"))+
  scale_shape_manual("Will Convert", values = c(1, 17))+
  geom_smooth(aes(group = 123), method=lm, colour = "gray38") +
  scale_x_continuous(name = "FC Summary Value", limits = c(-5, 5)) + 
  scale_y_continuous(name = "PET - Tau [SUVR]") + 
  theme_bw() + geom_text(x = -5, y = 0.925, colour = "black",vjust = "inward", hjust = "inward",
                         label = paste("Spearman Partial Correlation: \n", 
                                       pcorr_eqn_All(df.tau$FCSummary, df.tau$PUP_fSUVR_rsf_TOT_CORTMEAN, 
                                                     df.tau[,c("Age", "GENDER", "EDUC", "apoe4")]))) 

df.MRI.plot<-plotSetUp(df.MRI, datareturn[[3]]$model$model$Participant, datareturn[[3]]$model$model$Measure1, datareturn[[3]]$model$model$Measure2)
p.ADsig<-ATNplot(df.MRI.plot, df.MRI.plot$FCSummary, df.MRI.plot$ADsig, datareturn[[3]]$r, datareturn[[3]]$p, "AD Signature Volume")

df.MRI.plot<-plotSetUp(df.MRI, datareturn[[4]]$model$model$Participant, datareturn[[4]]$model$model$Measure1, datareturn[[4]]$model$model$Measure2)
p.Hippo<-ATNplot(df.MRI.plot, df.MRI.plot$FCSummary, df.MRI.plot$HippoVol, datareturn[[4]]$r, datareturn[[4]]$p, "Hippocampus Volume")


df.CSF.plot<-plotSetUp(df.CSF.classic, datareturn[[5]]$model$model$Participant, datareturn[[5]]$model$model$Measure1, datareturn[[5]]$model$model$Measure2)
p.AB42<-ATNplot(df.CSF.plot[,c("ID", "FCSummary", "E_ab42", "cdr05", "Measure1", "Measure2")], df.CSF.plot$FCSummary, df.CSF.plot$E_ab42, datareturn[[5]]$r, datareturn[[5]]$p, "CSF - AB42 [pg/mL]")

df.CSF.classic.plot<-plotSetUp(df.CSF.classic, datareturn[[6]]$model$model$Participant, datareturn[[6]]$model$model$Measure1, datareturn[[6]]$model$model$Measure2)
p.CSFtau<-ATNplot(df.CSF.classic.plot[,c("ID", "FCSummary", "E_tau", "cdr05", "Measure1", "Measure2")], df.CSF.classic.plot$FCSummary, df.CSF.classic.plot$E_tau, datareturn[[6]]$r, datareturn[[6]]$p, "CSF - tau [pg/mL]")


df.CSF.classic.plot<-plotSetUp(df.CSF.classic, datareturn[[7]]$model$model$Participant, datareturn[[7]]$model$model$Measure1, datareturn[[7]]$model$model$Measure2)
p.CSFptau<-ATNplot(df.CSF.classic.plot[,c("ID", "FCSummary", "E_ptau", "cdr05", "Measure1", "Measure2")], df.CSF.classic.plot$FCSummary, df.CSF.classic.plot$E_ptau, datareturn[[7]]$r, datareturn[[7]]$p, "CSF - ptau [pg/mL]")

#625x700
grid.arrange(p.pib, p.AB42)
p.CSFptau
p.PETtau #900 x 700
grid.arrange(p.ADsig, p.Hippo, p.CSFtau)
#############################################################################################

res <- df %>% group_by(ID, cdr05) %>% summarise(Freq=n())
table(res$Freq, res$cdr05)
